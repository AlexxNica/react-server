var fs = require('fs'),
	rimraf = require("rimraf"),
	mkdirp = require("mkdirp"),
	bundleNameUtil = require('../core/util/bundleNameUtil');

function cleanTargetDir() {
	var targetDirName = "./target-entrypoints";
	//TODO better error handling etc.
	if (fs.existsSync(targetDirName)) {
		var stats = fs.statSync(targetDirName);
		if (stats.isDirectory) {
			rimraf.sync(targetDirName);
		} else if (stats.isFile) {
			fs.unlinkSync(targetDirName);
		}		
	} 
	fs.mkdirSync(targetDirName);
}

module.exports = function(routesFilename) {
	var routes = fs.readFileSync(routesFilename, {encoding: "utf8"});
	routes = 
		"var module={};\n" +
		"function require(){return null;};\n" +
	 	"function __LAZY_REQUIRE__(arg){return arg;};\n" + 
	 	routes + "\n" +
	 	"return module.exports.routes;";

	routes = new Function(routes)();
	var routeNames = Object.keys(routes);
	
	cleanTargetDir();

	var entryPoints = {};

	for (var i=0; i < routeNames.length; i++) {		
	 	var routeName = routeNames[i];	 	
	 	if (!routes[routeName].page) {
	 		console.error("route " + routeName + " has no page property");
	 	}

	 	var entryPointCode = 
	 		"// file generated by EntryPointGenerator.js\n" +
	 		"var epHelper = require('../entrypointHelper');\n" +
			"window.rfBootstrap = function () {\n" +
			// make sure component is part of the entrypoint
			"\tvar component = require('" + routes[routeName].page + "');\n" +
			"\tepHelper.initialize(component);\n" +
			"}";

		mkdirp.sync("./target/client/generated-entrypoints");
		var outFileName = "./target/client/generated-entrypoints/" + routeName + "Entry__generated.js";

	 	fs.writeFileSync(outFileName, entryPointCode);

	 	entryPoints[bundleNameUtil.getEntryPointNameFromRouteName(routeName)] = outFileName;
	 }	 

	 return entryPoints;
}


